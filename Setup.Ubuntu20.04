#!/bin/sh
# Sets up Ubuntu 20.04 from bare-bones installation 
# Comment out what you don't need or run line-by-line, manually
sudo apt-get -qq update && \
    DEBIAN_FRONTEND=noninteractive \
    sudo apt-get -qq install -y cmake git vim gcc g++ gfortran wget gnupg \
            software-properties-common likwid libzip-dev libhtml-parser-perl \
            mpich libmpich-dev \
            openmpi-bin openmpi-doc libopenmpi-dev

# Installing latest GCC compiler (version 10)
sudo apt-get -qq install -y gcc-10 g++-10 gfortran-10

sudo update-alternatives \
      --install /usr/bin/gcc      gcc      /usr/bin/gcc-9       70 \
      --slave   /usr/bin/g++      g++      /usr/bin/g++-9          \
      --slave   /usr/bin/gfortran gfortran /usr/bin/gfortran-9     \
      --slave   /usr/bin/gcov     gcov     /usr/bin/gcov-9
sudo update-alternatives \
      --install /usr/bin/gcc      gcc      /usr/bin/gcc-10      90 \
      --slave   /usr/bin/g++      g++      /usr/bin/g++-10         \
      --slave   /usr/bin/gfortran gfortran /usr/bin/gfortran-10    \
      --slave   /usr/bin/gcov     gcov     /usr/bin/gcov-10
sudo chmod u+s /usr/bin/update-alternatives

DEBIAN_FRONTEND=noninteractive \
sudo apt-get -qq install -y texlive-font-utils texlive-latex-extra libpod-latex-perl gnuplot evince

# Installing dmalloc with a package manager
sudo apt-get -qq install -y libdmalloc-dev

# Installing dmalloc manually
sudo wget -q https://dmalloc.com/releases/dmalloc-5.5.2.tgz && \
    tar -xzf dmalloc-5.5.2.tgz && \
    cd dmalloc-5.5.2/ && \
    ./configure && make && make install

# Intel tools
sudo wget -q https://apt.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS-2023.PUB
sudo apt-key add GPG-PUB-KEY-INTEL-SW-PRODUCTS-2023.PUB
sudo rm -f GPG-PUB-KEY-INTEL-SW-PRODUCTS-2023.PUB
sudo echo "deb https://apt.repos.intel.com/oneapi all main" > /etc/apt/sources.list.d/oneAPI.list
sudo echo "deb [trusted=yes arch=amd64] https://repositories.intel.com/graphics/ubuntu bionic main" > /etc/apt/sources.list.d/intel-graphics.list
sudo apt-get update && \
sudo apt-get -qq install -y intel-oneapi-advisor \
                    intel-oneapi-vtune \
                    intel-oneapi-compiler-dpcpp-cpp-and-cpp-classic \
                    intel-oneapi-ifort \
                    intel-oneapi-openmp \
                    intel-oneapi-inspector

# Installing AMD uProf -- requires a manual process
# Download from https://developer.amd.com/amd-uprof/. Scroll down to bottom of page and select .deb file. Accept EULA and download will start.
#sudo dpkg --install amduprof_x.y-z_amd64.deb

# Nvidia GPU software for computation
# See https://docs.nvidia.com/hpc-sdk/index.html for Nvidia install instructions
wget --no-verbose https://developer.download.nvidia.com/hpc-sdk/20.9/nvhpc-20-9_20.9_amd64.deb
wget --no-verbose https://developer.download.nvidia.com/hpc-sdk/20.9/nvhpc-2020_20.9_amd64.deb
    DEBIAN_FRONTEND=noninteractive \
    sudo apt-get install -y ./nvhpc-20-9_20.9_amd64.deb ./nvhpc-2020_20.9_amd64.deb

# CodeXL
sudo wget -q https://github.com/GPUOpen-Archive/CodeXL/releases/download/v2.6/codexl-2.6-302.x86_64.rpm

sudo wget -q https://github.com/DynamoRIO/drmemory/releases/download/release_2.3.0/DrMemory-Linux-2.3.0-1.tar.gz
sudo tar -xzf DrMemory-Linux-2.3.0-1.tar.gz && rm -rf DrMemory-Linux-2.3.0-1.tar.gz

sudo wget -q ftp://ftp.mcs.anl.gov/pub/darshan/releases/darshan-3.2.1.tar.gz 
sudo tar -xzf darshan-3.2.1.tar.gz && cd darshan-3.2.1/darshan-util && ./configure && make && make install && \
    cd ../.. && rm -rf darshan-3.2.1 darshan-3.2.1.tar.gz

sudo apt-get clean && rm -rf /var/lib/apt/lists/*

source /opt/intel/oneapi/setvars.sh

export PATH=${PATH}:/project/DrMemory-Linux-2.3.0-1/bin64

#make clean
#make
